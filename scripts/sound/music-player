#!/bin/bash
# shellcheck shell=bash disable=2012,1091

# Copyright The Red Cyclops Â© 2023
# This program is free software: you can redistribute it and/or modify it under the terms of
# the GNU General Public License as published by the Free Software Foundation,
# either version 3 of the License, or (at your option) any later version.
# This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
# without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# See the GNU General Public License for more details.
# You should have received a copy of the GNU General Public License along with this program.
# If not, see <https://www.gnu.org/licenses/>.

# Import libraries
source "$MUSICBOX_BIN_DIR/formatlib"
# Add a funcion to get the latest unplayed song
getlatestunplayed() {
local counter
counter=1
local latestsong
while [ -z "$selectedsong" ]; do
    # Loop through the songs until the latest one that hasn't been played is reached
    # shellcheck disable=2012
    latestsong=$(ls "$MUSICBOX_CACHE_DIR/music" -tw 1 | sed "${counter}q;d")
    if ! grep -q "$latestsong" "$MUSICBOX_CACHE_DIR/played-songs"; then
        selectedsong=$latestsong
    fi
    counter=$((counter+1))
done
}
# Check if we only want to play one song
    if [ "$1" = "--onesong" ]; then
        # Get the latest unplayed song
        getlatestunplayed
        # Add it to the played list
        echo "$selectedsong" >> "$MUSICBOX_CACHE_DIR/played-songs"
        # Play the song
        vlc "$MUSICBOX_CACHE_DIR/music/$selectedsong"
        exit 0
    fi

# Check if only short.mp3 is being requested
if [ "$1" = "--short" ]; then
    vlc "$MUSICBOX_CFG_DIR/music/short.mp3"
fi

# Check if argument is correctly formated if it's not try to check if provided in antoher format and convert
date -d "$1" 1> /dev/null|| critical "STOP TIME NOT PROVIDED OR PROVIDED IN AN UNRECOGNIZED FORMAT" && exit 1
stoptime=$(date -d "$1" +%H%M)
# Get the latest song not on the played list
while [ -z "$selectedsong" ]; do
    i=1
    # Loop through the songs until the latest one that hasn't been played is reached
    # shellcheck disable=2012
    latestsong=$(ls "$MUSICBOX_CACHE_DIR/music" -tw 1 | sed "${i}q;d")
    if ! grep -q "$latestsong" "$MUSICBOX_CACHE_DIR/played-songs"; then
        selectedsong=$latestsong
    else
        i=$((i+1))
    fi
# Check for the case of no songs
    if [ "$(ls "$MUSICBOX_CACHE_DIR/music")" = '' ]; then
        error "No songs found when searching for the latest!"
        break;
    fi
done
#Add it to the played list
echo "$selectedsong" >> "$MUSICBOX_CACHE_DIR/played-songs"
# Play the song until the selected time or the next one is needed
vlc "$MUSICBOX_CACHE_DIR/music/$selectedsong" &
pid=$?

while kill -s 0 $pid; do
# If the song is playing after the stop time fade the sound kill it and restore the sound
if [ "$(date +%H%M)" -gt "$stoptime" ]; then
fade
pkill $pid
#restore volume
for sink in $(pacmd list-sinks | grep 'index:' | cut -b12-)
    do
        pactl set-sink-volume "$sink" 100%
    done
fi
sleep 0.25
done
# If the stop time is not reached relaunch the program
if [ "$(date +%H%M)" -lt "$stoptime" ]; then
    music-player "$@"
fi